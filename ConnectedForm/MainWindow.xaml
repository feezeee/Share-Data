<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
        
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ConnectedForm"
        xmlns:WpfControlLibrary2="clr-namespace:WpfControlLibrary2;assembly=WpfControlLibrary2"
        xmlns:WpfControlLibrary3="clr-namespace:WpfControlLibrary3;assembly=WpfControlLibrary3"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        x:Class="ConnectedForm.MainWindow" 
        mc:Ignorable="d"
        Title="MainWindow" WindowState="Maximized" x:Name="MainWn" Background="#FF252526">

    <Window.Resources>
        <!--<LinearGradientBrush x:Key="GridViewColumnHeaderBackground"  StartPoint="0,0">
            <GradientStop Color="red" Offset="0"/>
            <GradientStop Color="Green" Offset="1"/>
        </LinearGradientBrush>-->
        <SolidColorBrush x:Key="GridViewColumnHeaderBorderBackground" Color="Transparent"></SolidColorBrush>

        <!--<LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" StartPoint="0,0">
            <GradientStop Color="Green" Offset="0.5"/>
            <GradientStop Color="#FFB7E7FB" Offset="1"/>
        </LinearGradientBrush>-->
        <!--<LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" StartPoint="0,0">
            <GradientStop Color="#FF0BB2FD" Offset="0"/>
            <GradientStop Color="Black" Offset="0.5"/>
        </LinearGradientBrush>-->
        <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
            <Setter Property="Canvas.Right" Value="-9"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                            <Rectangle Fill="#FF3A3A46" HorizontalAlignment="Center" Width="3" RadiusX="1" RadiusY="1"/>
                        </Border>
                    </ControlTemplate>
                    </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid SnapsToDevicePixels="true">

                            <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}">
                                <Grid>
                                    <!--<Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="7"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="red" Visibility="Collapsed"/>-->
                                    <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                            </Canvas>


                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="Background" TargetName="HeaderBorder" Value="#FF3F3F46">

                                </Setter>
                                <!--<Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#013a33"/>-->
                                <!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="HeaderBorder" Value="#FF36ABC5"/>
                                <!--<Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>-->
                                <!--<Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>-->
                                <!--<Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBCE4F9"/>-->
                                <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Grid}" x:Key="waiting_grd">
            <Style.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCheckBoxChecked_1}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                To="400" By="0.1" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                                To="400" By="0.1" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                To="0" By="5" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                                To="0" By="5" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.3" By="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" By="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="grd">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsCheckBoxChecked}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                To="400" By="0.1" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                                To="400" By="0.1" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                To="0" By="5" Duration="0:0:0.5"/>
                                <DoubleAnimation Storyboard.TargetProperty="Height"
                                                To="0" By="5" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.3" By="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" By="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="up_btn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="borderMy" BorderBrush="{x:Null}" BorderThickness="0"
                                Background="#FF252526" Opacity="0.3">
                            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="White"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="borderMy" Value="#FF313132" />
                            </Trigger>

                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="borderMy" To="0.3" By="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="borderMy" To="1" By="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="ListView_" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Padding="{TemplateBinding Padding}"
Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="true">
                            <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    </Window.Resources>




    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="#FF252526">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="" BorderBrush="{x:Null}" Style="{StaticResource ResourceKey=up_btn}" Background="{x:Null}"/>
            <Button Grid.Column="1" Width="90" Content="Параметры" BorderBrush="{x:Null}" Style="{StaticResource ResourceKey=up_btn}" Background="{x:Null}"/>
            <Button Grid.Column="2" Width="80" Content="Помощь" BorderBrush="{x:Null}" Background="{x:Null}" Style="{StaticResource up_btn}" />

        </Grid>
        <Grid Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" x:Name="firstColumn"/>
                    <ColumnDefinition Width="0.5*" x:Name="secondColumn"/>
                </Grid.ColumnDefinitions>


                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Label Height="30" VerticalAlignment="Top" x:Name="LabelIp0" Content="Этот компьютер" Background="#FF474747" Foreground="White"/>
                    </Grid>

                    <Grid x:Name="gridforfunc0" Height="auto" VerticalAlignment="Top" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="goback0" HorizontalAlignment="Left" Width="30"  Grid.Column="0"/>
                            <Button x:Name="gonext0" HorizontalAlignment="Left" Width="30" Grid.Column="1"/>
                        </Grid>

                        <TextBox x:Name="pathbox0" Grid.Row="1" TextChanged="TextBox_TextChanged"  Background="#FF474747" Foreground="White">
                            
                        </TextBox>
                        <ScrollViewer  Grid.Row="2" x:Name="scroll0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel  x:Name="stackpanel0" Orientation="Vertical" Width="{Binding Width, ElementName=firstColumn}">
                                <ListView MouseDoubleClick="listUsers0_MouseDoubleClick"  x:Name="listUsers0" AllowDrop="False" Drop="listUsers0_Drop" Background="{x:Null}" Foreground="White">
                                    <ListView.View>
                                        <GridView ColumnHeaderContainerStyle="{StaticResource ColumnHeader}">
                                            <GridViewColumn Width="{Binding setWidth}" Header="Имя папки/файла" DisplayMemberBinding="{Binding nameFile}" >
                                                <!--<GridViewColumn.HeaderContainerStyle>
                                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </Style>
                                                </GridViewColumn.HeaderContainerStyle>-->
                                            </GridViewColumn>
                                            <GridViewColumn Width="{Binding setWidth}" Header="Дата создания" DisplayMemberBinding="{Binding time}">
                                            </GridViewColumn>
                                            <GridViewColumn Width="{Binding setWidth}" Header="Размер файла" DisplayMemberBinding="{Binding sizeFile}">
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <EventSetter Event="UIElement.MouseMove" Handler="ListViewItem_MouseMove"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <Border Padding="{TemplateBinding Padding}"
Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
SnapsToDevicePixels="true">

                                                            <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="#FF5C86AA"/>
                                                            </Trigger>
                                                            <!--<Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Background" Value="#FF5C86AA"/>
                                    </Trigger>-->
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="#FF36ABC5"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseCaptured" Value="True">
                                                                <Setter Property="Background" Value="Black"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Background="#FFE4E4E4">
                        <Label Height="30" VerticalAlignment="Top" x:Name="LabelIp1"/>
                    </Grid>
                    <Grid x:Name="gridforfunc1" Height="auto" VerticalAlignment="Top" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="goback1" HorizontalAlignment="Left" Width="30"  Grid.Column="0"/>
                            <Button x:Name="gonext1" HorizontalAlignment="Left" Width="30" Grid.Column="1"/>
                        </Grid>
                        <TextBox x:Name="pathbox1" Grid.Row="1" TextChanged="pathbox1_TextChanged" BorderBrush="Black"/>
                        <ScrollViewer Grid.Row="2" x:Name="scroll1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel  x:Name="stackpanel1" Orientation="Vertical" Width="{Binding Width, ElementName=firstColumn}">
                                <ListView  MouseDoubleClick="listUsers1_MouseDoubleClick"  x:Name="listUsers1" AllowDrop="False" Drop="listUsers1_Drop">
                                    <ListView.View>
                                        <GridView >
                                            <GridViewColumn Width="{Binding setWidth}" Header="Имя папки/файла" DisplayMemberBinding="{Binding nameFile}"/>
                                            <GridViewColumn Width="{Binding setWidth}" Header="Дата создания" DisplayMemberBinding="{Binding time}"/>
                                            <GridViewColumn  Width="{Binding setWidth}" Header="Размер файла" DisplayMemberBinding="{Binding sizeFile}"/>
                                        </GridView>
                                    </ListView.View>

                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <EventSetter Event="UIElement.MouseMove" Handler="ListViewItem_MouseMove_1"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <!--<Setter Property="Background" Value="Blue"/>-->
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="2" x:Name="transmit_chk" Click="transmit_chk_Click" HorizontalAlignment="Right" Width="20"  Height="20" Content="{Binding ElementName=tiktak, Path=Items.Count}"/>
            <Button Grid.Column="1" x:Name="wait_chk" Click="wait_chk_Click" Width="20" Height="20"/>
        </Grid>

        <Grid Grid.Row="1" x:Name="Gridfortransmit" MaxWidth="400" Style="{StaticResource grd}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="0" Height="0" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button x:Name="ClearList_btn" Grid.Row="0" Content="Очистить" HorizontalAlignment="Left" Click="ClearList_btn_Click"/>

            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Visible">

                <StackPanel>
                    <TreeView x:Name="tiktak">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                                <UserControl Content="{Binding flk}" />
                                <!--<TextBlock Text="{Binding Title}" />-->
                                <!--/<ProgressBar Value="{Binding StatusProgress}"/>-->
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </StackPanel>

            </ScrollViewer>


        </Grid>
        <Grid Grid.Row="1" x:Name="GridForWaiting" MaxWidth="400" Style="{StaticResource waiting_grd}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="0" Height="0" Background="Transparent" Margin="0,0,-41,3">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button x:Name="ClearList_btn_1" Grid.Row="0" Content="Очистить" HorizontalAlignment="Left"/>

            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Visible">

                <StackPanel>
                    <TreeView x:Name="treeForWaiting">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                                <UserControl Content="{Binding flk}"/>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </StackPanel>

            </ScrollViewer>



        </Grid>
    </Grid>
</Window>
